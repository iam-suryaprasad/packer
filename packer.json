{
    "_comment" : "Create a AWS AMI with ubuntu",
    "variables": {
      "region": "",
      "source_ami":"",
      "instance_type":"",
      "vpc_id": "",
      "subnet_id": ""
    },
    "_comment1" : "packer build -var \"aws_secret_key=foo\" template.json",
    "_comment2" : "packer build -var-file packer-vars.json template.json",
    "builders": [
  {
    "type": "amazon-ebs",
    "region": "{{user `region`}}",
    "source_ami": "{{user `source_ami`}}",
    "instance_type": "{{user `instance_type`}}",
    "ssh_username": "ubuntu",
    "ami_name": "Surya-Prasad-Build-{{isotime | clean_resource_name}}",
    "vpc_id": "{{user `vpc_id`}}",
    "subnet_id": "{{user `subnet_id`}}",
    "associate_public_ip_address": true,
    "tags": {
      "Name": "Surya-Prasad-Build-{{isotime | clean_resource_name}}"
    }
  }
],
    "provisioners": [{
      "type": "shell",
      "inline": [
        "sudo useradd -m ansibleadmin --shell /bin/bash",
        "sudo mkdir -p /home/ansibleadmin/.ssh  ",
        "sudo chown -R ansibleadmin:ansibleadmin /home/ansibleadmin/.ssh",
        "sudo touch /home/ansibleadmin/.ssh/authorized_keys",
        "sudo chown ansibleadmin:ansibleadmin /home/ansibleadmin/.ssh/authorized_keys",
        "sudo chmod 600 /home/ansibleadmin/.ssh/authorized_keys",
        "sudo usermod -aG sudo ansibleadmin",
        "echo 'ansibleadmin ALL=(ALL) NOPASSWD: ALL' | sudo tee -a /etc/sudoers",
        "echo 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIE/vpi6tYRRN2pDylHGl5RlH5IP6VkxthmjCNBAPt413' | sudo tee -a /home/ansibleadmin/.ssh/authorized_keys"
        ]
    },
    {
       "type": "shell",
       "inline": [
        "sudo apt update -y",
        "curl https://get.docker.com | bash"
       ]
    },
    {
      "type": "file",
      "source": "docker.service",
      "destination": "/tmp/docker.service"
    },
    {
        "type": "shell",
        "inline": [
            "sudo cp /tmp/docker.service /lib/systemd/system/docker.service",
            "sudo usermod -a -G docker ubuntu",
            "sudo systemctl daemon-reload",
            "sudo service docker restart"
        ]

    },
    {
      "type": "shell",
      "inline": [
        "sudo apt install -y unzip stress net-tools jq"
      ]
   }
    
]
  }